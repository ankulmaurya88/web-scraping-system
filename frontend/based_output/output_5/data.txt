defaultdict(<class 'list'>, {'titles': ['JavaScript Tutorial', 'Log in', 'Create Account', 'JavaScript Basics', 'JS Variables & Datatypes', 'JS Operators', 'JS Statements', 'JS Loops', 'JS Perfomance & Debugging', 'JS Object', 'JS Function', 'JS Array', 'JS String', 'JS Numbers', 'JS Math', 'JS Map', 'JS Set', 'JS Objects', 'JS Advance', 'JavaScript Exercises', 'Why Learn JavaScript?', 'Write and Run Your First JavaScript Program', 'Fundamentals', 'Functions and Events', 'JavaScript Beginner Projects', 'JavaScript Data Structure', 'Object Oriented Programming', 'Browser and Document Object Model', 'Asynchronous JavaScript', 'JavaScript Intermediate Projects', 'JavaScript JSON', 'Regular Expression and Validation', 'Exception and Error Handling', 'Testing and Performance Optimization', 'Interesting Facts', 'JavaScript Advanced Projects', 'JavaScript Quiz', 'JavaScript Practice', 'JavaScript Exercises', 'Interview Questions', 'Libraries and Frameworks', 'Features of JavaScript', 'Applications of JavaScript', 'JavaScript vs. Other Programming Languages', 'List of Companies Using JavaScript', 'Career & Jobs in JavaScript', 'Introduction of JavaScript', 'First program - Hello Geeks', 'JavaScript Variables', 'Data Types in JavaScript', 'JavaScript Arithmetic Operators', 'JavaScript Type Conversion', 'Thank You!', 'What kind of Experience do you want to share?', 'Libraries', 'Frameworks'], 'paragraphs': ["JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It's an interpreted language that executes code line by line, providing more flexibility.", "Mostly browsers can run JavaScript directly, so there's no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily.", 'Before we start, We recommend you to edit the code and try to print your own name.', "Let's ExploreJavaScript's fundamentalswhich will help build you a understanding to start with JavaScript", 'Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading.', 'Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications.', 'JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail.', "JavaScript's built-in utilities and ES6+ enhancements provide additional data structures, including the following", 'To learn data structure and algorithm with JavaScript in detail, you can refer to ourDSA with JavaScript Tutorial.', 'Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors.', "Now you have a good understanding of JavaScript. So let's implement all these in some real world applications.", 'It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client.', 'Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria.', 'Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively', 'This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also.', 'Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge.', 'For all lists of Projects follow the article-JavaScript Project Ideas with Source Code', 'This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript.', 'The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges.', 'This section provides a list of interview questions related to JavaScript.', 'For a quick recap of JavaScript read the article -JavaScript Cheat Sheet', 'JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality.', 'Also, they provide project structure and data flow structure that helps to create fast and more reliable applications.', 'Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript.', 'Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript.', 'JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics:', 'JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming.', 'Below is a comparison of JavaScript with Python, C++, and Java:', 'Multi-paradigm (event-driven, functional, object-oriented)', 'Multi-paradigm (object-oriented, procedural, functional)', 'Multi-paradigm (procedural, object-oriented, generic)', 'Web development, mobile apps, real-time applications', 'Web development, data analysis, machine learning', 'System programming, game development, high-performance applications', 'Large-scale applications, enterprise software', 'These are some popular companies that use JavaScript in their workflow', 'Google uses JavaScript extensively in its web services, including Gmail and Google Maps.', 'Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface.', 'Netflix uses JavaScript for their interactive user interface and in their backend services.', 'Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end.', 'LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction.', 'JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies.', 'Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience.', 'PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences.', 'eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions.', "Slack's web client and several of its real-time communication features are powered by JavaScript.", 'JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers', 'If you are a person, who is more into study from Courses.JavaScript CourseProvides you Complete Beginner to Advanced learning.', 'Get detailed list of all JavaScript Topics-JavaScript Complete Guide – A to Z', 'Already have an account ?Log in', '*Please enter your email address or userHandle.'], 'lists': [['CoursesDSA to DevelopmentGATE 2026 PrepGet 3 IBM CertificationsFor Working ProfessionalsInterview 101: DSA & System DesignData Science Training ProgramJAVA Backend Development (Live)Data Analytics TrainingDevOps Engineering (LIVE)Data Structures & Algorithms in PythonFor StudentsPlacement Preparation with DSAData Science (Live)Data Structure & Algorithm-Self Paced (C++/JAVA)Master Competitive ProgrammingFull Stack Development with React & Node JS (Live)(NEW) Digital Marketing ProgramFull Stack DevelopmentData Science & ML ProgramAll Courses', 'DSA to Development', 'GATE 2026 Prep', 'Get 3 IBM Certifications', 'For Working ProfessionalsInterview 101: DSA & System DesignData Science Training ProgramJAVA Backend Development (Live)Data Analytics TrainingDevOps Engineering (LIVE)Data Structures & Algorithms in Python', 'Interview 101: DSA & System Design', 'Data Science Training Program', 'JAVA Backend Development (Live)', 'Data Analytics Training', 'DevOps Engineering (LIVE)', 'Data Structures & Algorithms in Python', 'For StudentsPlacement Preparation with DSAData Science (Live)Data Structure & Algorithm-Self Paced (C++/JAVA)Master Competitive ProgrammingFull Stack Development with React & Node JS (Live)', 'Placement Preparation with DSA', 'Data Science (Live)', 'Data Structure & Algorithm-Self Paced (C++/JAVA)', 'Master Competitive Programming', 'Full Stack Development with React & Node JS (Live)', '(NEW) Digital Marketing Program', 'Full Stack Development', 'Data Science & ML Program', 'All Courses', 'TutorialsPythonJavaData Structures & AlgorithmsML & Data ScienceInterview CornerProgramming LanguagesWeb DevelopmentGATECS SubjectsDevOps And LinuxSchool LearningSoftware and Tools', 'Python', 'Java', 'Data Structures & Algorithms', 'ML & Data Science', 'Interview Corner', 'Programming Languages', 'Web Development', 'GATE', 'CS Subjects', 'DevOps And Linux', 'School Learning', 'Software and Tools', 'PracticePractice Coding ProblemsNation Skillup- Free CoursesProblem of the DayETS TOEFL: Scholarship Contest', 'Practice Coding Problems', 'Nation Skillup- Free Courses', 'Problem of the Day', 'ETS TOEFL: Scholarship Contest', 'JobsBecome a MentorApply Now!Post JobsJob-A-Thon: Hiring Challenge', 'Become a Mentor', 'Apply Now!', 'Post Jobs', 'Job-A-Thon: Hiring Challenge'], ['DSA to Development', 'GATE 2026 Prep', 'Get 3 IBM Certifications', 'For Working ProfessionalsInterview 101: DSA & System DesignData Science Training ProgramJAVA Backend Development (Live)Data Analytics TrainingDevOps Engineering (LIVE)Data Structures & Algorithms in Python', 'Interview 101: DSA & System Design', 'Data Science Training Program', 'JAVA Backend Development (Live)', 'Data Analytics Training', 'DevOps Engineering (LIVE)', 'Data Structures & Algorithms in Python', 'For StudentsPlacement Preparation with DSAData Science (Live)Data Structure & Algorithm-Self Paced (C++/JAVA)Master Competitive ProgrammingFull Stack Development with React & Node JS (Live)', 'Placement Preparation with DSA', 'Data Science (Live)', 'Data Structure & Algorithm-Self Paced (C++/JAVA)', 'Master Competitive Programming', 'Full Stack Development with React & Node JS (Live)', '(NEW) Digital Marketing Program', 'Full Stack Development', 'Data Science & ML Program', 'All Courses'], ['Interview 101: DSA & System Design', 'Data Science Training Program', 'JAVA Backend Development (Live)', 'Data Analytics Training', 'DevOps Engineering (LIVE)', 'Data Structures & Algorithms in Python'], ['Placement Preparation with DSA', 'Data Science (Live)', 'Data Structure & Algorithm-Self Paced (C++/JAVA)', 'Master Competitive Programming', 'Full Stack Development with React & Node JS (Live)'], ['Python', 'Java', 'Data Structures & Algorithms', 'ML & Data Science', 'Interview Corner', 'Programming Languages', 'Web Development', 'GATE', 'CS Subjects', 'DevOps And Linux', 'School Learning', 'Software and Tools'], ['Practice Coding Problems', 'Nation Skillup- Free Courses', 'Problem of the Day', 'ETS TOEFL: Scholarship Contest'], ['Become a Mentor', 'Apply Now!', 'Post Jobs', 'Job-A-Thon: Hiring Challenge'], ['Switch to Dark Mode', "NotificationsMark all as readAllView AllNotificationsMark all as readAllUnreadReadYou're all caught up!!", 'Sign In'], ['DSA with JS - Self Paced', 'JS Tutorial', 'JS Exercise', 'JS Interview Questions', 'JS Array', 'JS String', 'JS Course', 'JS Object', 'JS Operator', 'JS Date', 'JS Error', 'JS Projects', 'JS Set', 'JS Map', 'JS RegExp', 'JS Math', 'JS Number', 'JS Boolean', 'JS Examples', 'JS Free JS Course', 'JS A to Z Guide', 'JS Formatter'], ['Explore GfG Courses', 'Share Your Experiences', 'Full Stack DevelopmentCourse'], ["JavaScript on Client Side:On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user's browser.", 'JavaScript on Server Side:  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses,to browsers.'], ['JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code.', 'It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development.', 'JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications.', 'JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications.', 'It is cross-platform and runs directly in all modern web browsers without the need for installation.', 'Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks.'], ['Introduction', 'Quiz:JS Basics', 'Using JS in HTML', 'Variables and Datatypes', 'Quiz:Variables & Data Types', 'Operators', 'Type Conversion and Coercion', 'Control Flow Statements', 'Quiz:Operators,Control Flow', 'Scope', 'Browser console'], ['Functions', 'Function binding', 'Hoisting', 'Closures', 'Higher-Order Functions', 'Iterator', 'Function Generator', 'Quiz:Functions', 'Events', 'Event Loop', 'Event Bubbling', 'Quiz:Event Handling'], ['Counter Application', 'Prime Number Checker', 'Show and Hide Password', 'Palindrome Checker App', 'JavaScript Carousel', 'Email Validator App', 'Unicode Character Value', 'Random Number Generator', 'Random Password Generator'], ['Numbers', 'String', 'Quiz:Numbers,String', 'Array', 'LinkedList', 'Quiz:Arrays,Linked List', 'Map', 'Stack', 'Queue', 'Quiz:Stack,Queue', 'Sorting Algorithms'], ['WeakMap', 'WeakSet', 'Typed Arrays', 'Deque', 'Priority Queue (Heap)', 'Quiz:Data Structure'], ['Introduction to OOP', 'Objects', 'Quiz:Objects', 'Classes', 'Constructor Method', 'this Keyword', 'Prototype', 'Static Methods', 'Inheritance', 'Quiz:Classes and Inheritance', 'Encapsulation', 'Abstraction', 'Polymorphism', 'Getters and Setters', 'Quiz:OOP'], ['Browser Object Model', 'Document Object Model', 'Manipulate DOM Elements', 'Event Handling in the DOM', 'Quiz:BOM and DOM'], ['Callbacks', 'Promise', 'Promise Chaining', 'Async/Await', 'Quiz:Asynchronous JavaScript'], ['Price Range Slider with Min-Max Input', 'GitHub Profile Search', 'Toast Notification', 'Multi-Step Progress Bar', 'Quiz App with Timer', 'Expense Tracker', 'Sortable and Filterable Table', 'Dynamic Resume Builder', 'OTP Input Field', 'Student Grade Calculator'], ['JSON Tutorial', 'JSON vs JavaScript Object', 'Read JSON File Using JS', 'Parse JSON Data in JS', 'JavaScript JSON Parser', 'JavaScript JSON Complete Reference', 'Quiz:JSON'], ['Regular expressions', 'Form Validation', 'Email Validation', 'Number Validation', 'Password Validation', 'URL Validation', 'UserName Validation', 'Quiz:Regular Expressions'], ['Exception Handling', 'throw Statement', 'try-catch Statement', 'Debugging', 'Quiz:Error Handling & Debugging'], ['Unit testing with Jest', 'Memory Management', 'Garbage Collection', 'Lazy Loading', 'Debouncing', 'Throttling', 'Quiz:Testing & Optimization'], ['Data Types', 'Strings', 'Functions', "'this' keyword", 'Set', 'Map', 'Arrays', 'Object', 'Complete JavaScript'], ['Employee Database Management System', 'Nested Chat Comments', 'Responsive Admin Dashboard', 'Task Scheduler', 'Dragon’s World Game', 'Tic-Tac-Toe Game', 'QR Code Generator', 'Resize and Compress Images', 'QR Code Scanner or Reader'], ['Quizzes', 'Practice Quiz-1', 'Practice Quiz-2', 'Practice Quiz-3'], ['Coding Problems'], ['JavaScript Exercises, Practice Questions and Solutions', 'JavaScript String Exercise', 'JavaScript Array Exercise', 'JavaScript Coding Questions and Answers', 'JavaScript Programming Examples'], ['JavaScript Interview Questions and Answers (2025) For Begineers', 'Intermediate JavaScript Interview Questions and Answers (2025)', 'Advance JS Interview Questions and Answers (2025) For Experienced', 'JavaScript this Operator Interview Questions', 'JavaScript String Interview Questions', 'JavaScript Array Interview Questions', 'JavaScript Object Interview Questions', 'Top 50 Array Coding Problems for Interviews', 'JavaScript Output Based Interview Questions'], ['Frontend Libraries:React,Preact,Lodash,Moment.js,jQuery,Axios', 'Backend Libraries:Socket.io,JWT,Bcrypt,Passport.js,CORS'], ['Frontend Frameworks:Vue.js,Angular,Next.js,Nuxt.js,Gatsby,Remix', 'Backend Frameworks:Express.js,NestJS,Koa.js, Sails.js,Fastify', 'FullStack FrameWorks:Meteor.js, Next.js, Nuxt.js, RedwoodJS'], ["Easy to Learn and Use: JavaScript's syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up.", 'Interpreted Language: JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler.', 'Event-Driven and Asynchronous: JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations.', 'Object-Oriented and Functional: JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need.', 'Dynamically Typed: In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible.', 'Extensive Libraries and Frameworks: JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects.', 'Cross-Platform: JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms.', 'Large Community Support: JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy.'], ['Web Development: JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications.', 'Mobile App Development: JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android.', 'Game Development: JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser.', 'Server-Side Development: With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems.', 'Scripting & Automation: JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work.', 'Web Scraping: JavaScript, along with libraries likePuppeteer, is used to extract information from websites for data analysis or research, making it useful for web scraping tasks.', 'IoT (Internet of Things): JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five.', 'Real-Time Applications: JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers.'], ['JavaScript', 'Web Technologies', 'Tutorials', 'Web-Tech Tutorials'], ['Company', 'About Us', 'Legal', 'Privacy Policy', 'Careers', 'In Media', 'Contact Us', 'Corporate Solution', 'Campus Training Program'], ['Explore', 'Job-A-Thon', 'Offline Classroom Program', 'DSA in JAVA/C++', 'Master System Design', 'Master CP', 'Videos'], ['Tutorials', 'Python', 'Java', 'C++', 'PHP', 'GoLang', 'SQL', 'R Language', 'Android'], ['DSA', 'DSA Tutorial', 'Problem Of The Day', 'GfG 160', 'DSA 360', 'DSA Roadmap', 'DSA Interview Questions', 'Competitive Programming'], ['Data Science & ML', 'Data Science With Python', 'Machine Learning', 'ML Maths', 'Data Visualisation', 'Pandas', 'NumPy', 'NLP', 'Deep Learning'], ['Web Technologies', 'HTML', 'CSS', 'JavaScript', 'TypeScript', 'ReactJS', 'NextJS', 'NodeJs', 'Bootstrap', 'Tailwind CSS'], ['Python Tutorial', 'Python Examples', 'Django Tutorial', 'Python Projects', 'Python Tkinter', 'Web Scraping', 'OpenCV Tutorial', 'Python Interview Question'], ['Computer Science', 'GATE CS Notes', 'Operating Systems', 'Computer Network', 'Database Management System', 'Software Engineering', 'Digital Logic Design', 'Engineering Maths'], ['DevOps', 'Git', 'AWS', 'Docker', 'Kubernetes', 'Azure', 'GCP', 'DevOps Roadmap'], ['System Design', 'High Level Design', 'Low Level Design', 'UML Diagrams', 'Interview Guide', 'Design Patterns', 'OOAD', 'System Design Bootcamp', 'Interview Questions'], ['School Subjects', 'Mathematics', 'Physics', 'Chemistry', 'Biology', 'Social Science', 'English Grammar'], ['Databases', 'SQL', 'MYSQL', 'PostgreSQL', 'PL/SQL', 'MongoDB'], ['Preparation Corner', 'Company-Wise Recruitment Process', 'Aptitude Preparation', 'Puzzles', 'Company-Wise Preparation'], ['More Tutorials', 'Software Development', 'Software Testing', 'Product Management', 'Project Management', 'Linux', 'Excel', 'All Cheat Sheets'], ['Courses', 'IBM Certification Courses', 'DSA and Placements', 'Web Development', 'Data Science', 'Programming Languages', 'DevOps & Cloud'], ['Programming Languages', 'C Programming with Data Structures', 'C++ Programming Course', 'Java Programming Course', 'Python Full Course'], ['Clouds/Devops', 'DevOps Engineering', 'AWS Solutions Architect Certification', 'Salesforce Certified Administrator Course'], ['GATE 2026', 'GATE CS Rank Booster', 'GATE DA Rank Booster', 'GATE CS & IT Course - 2026', 'GATE DA Course 2026', 'GATE Rank Predictor']], 'links': [{'text': 'DSA to Development', 'href': 'https://www.geeksforgeeks.org/courses/dsa-to-development-coding-guide/'}, {'text': 'GATE 2026 Prep', 'href': 'https://www.geeksforgeeks.org/courses/category/gate/'}, {'text': 'Get 3 IBM Certifications', 'href': 'https://www.geeksforgeeks.org/courses/category/ibm-certification/'}, {'text': 'Interview 101: DSA & System Design', 'href': 'https://www.geeksforgeeks.org/courses/interviewe-101-data-structures-algorithm-system-design'}, {'text': 'Data Science Training Program', 'href': 'https://www.geeksforgeeks.org/courses/full-stack-applied-data-science-program/'}, {'text': 'JAVA Backend Development (Live)', 'href': 'https://www.geeksforgeeks.org/courses/Java-backend-live/'}, {'text': 'Data Analytics Training', 'href': 'https://www.geeksforgeeks.org/courses/data-analytics-training-program-excel-sql-python-powerbi'}, {'text': 'DevOps Engineering (LIVE)', 'href': 'https://www.geeksforgeeks.org/courses/devops-live/'}, {'text': 'Data Structures & Algorithms in Python', 'href': 'https://www.geeksforgeeks.org/courses/Data-Structures-With-Python/'}, {'text': 'Placement Preparation with DSA', 'href': 'https://www.geeksforgeeks.org/courses/placement-prep-programming-data-structures-algorithm'}, {'text': 'Data Science (Live)', 'href': 'https://www.geeksforgeeks.org/courses/data-science-live/'}, {'text': 'Data Structure & Algorithm-Self Paced (C++/JAVA)', 'href': 'https://www.geeksforgeeks.org/courses/dsa-self-paced/'}, {'text': 'Master Competitive Programming', 'href': 'https://www.geeksforgeeks.org/courses/competitive-programming-cp/'}, {'text': 'Full Stack Development with React & Node JS (Live)', 'href': 'https://www.geeksforgeeks.org/courses/full-stack-node/'}, {'text': '(NEW) Digital Marketing Program', 'href': 'https://www.geeksforgeeks.org/courses/digital-marketing-training'}, {'text': 'Full Stack Development', 'href': 'https://www.geeksforgeeks.org/courses/full-stack-node/'}, {'text': 'Data Science & ML Program', 'href': 'https://www.geeksforgeeks.org/courses/data-science-live/'}, {'text': 'All Courses', 'href': 'https://www.geeksforgeeks.org/courses'}, {'text': 'Python', 'href': 'https://www.geeksforgeeks.org/python/python-programming-language-tutorial/'}, {'text': 'Java', 'href': 'https://www.geeksforgeeks.org/java/java/'}, {'text': 'Data Structures & Algorithms', 'href': 'https://www.geeksforgeeks.org/learn-data-structures-and-algorithms-dsa-tutorial/'}, {'text': 'ML & Data Science', 'href': 'https://www.geeksforgeeks.org/ai-ml-and-data-science-tutorial-learn-ai-ml-and-data-science/'}, {'text': 'Interview Corner', 'href': 'https://www.geeksforgeeks.org/interview-corner/'}, {'text': 'Programming Languages', 'href': 'https://www.geeksforgeeks.org/programming-language-tutorials/'}, {'text': 'Web Development', 'href': 'https://www.geeksforgeeks.org/web-technology/'}, {'text': 'GATE', 'href': 'https://www.geeksforgeeks.org/gate-exam-tutorial/'}, {'text': 'CS Subjects', 'href': 'https://www.geeksforgeeks.org/articles-on-computer-science-subjects-gq/'}, {'text': 'DevOps And Linux', 'href': 'https://www.geeksforgeeks.org/devops-and-linux-tutorial/'}, {'text': 'School Learning', 'href': 'https://www.geeksforgeeks.org/geeksforgeeks-school/'}, {'text': 'Software and Tools', 'href': 'https://www.geeksforgeeks.org/websites-apps/software-and-tools-a-to-z-list/'}, {'text': 'Practice Coding Problems', 'href': 'https://www.geeksforgeeks.org/geeksforgeeks-practice-best-online-coding-platform/'}, {'text': 'Nation Skillup- Free Courses', 'href': 'https://www.geeksforgeeks.org/nation-skill-up/'}, {'text': 'Problem of the Day', 'href': 'https://www.geeksforgeeks.org/problem-of-the-day'}, {'text': 'ETS TOEFL: Scholarship Contest', 'href': 'https://www.geeksforgeeks.org/ets-toefl-global-scholar-challenge-2025'}, {'text': 'Become a Mentor', 'href': 'https://connect.geeksforgeeks.org/'}, {'text': 'Apply Now!', 'href': 'https://www.geeksforgeeks.org/jobs'}, {'text': 'Post Jobs', 'href': 'https://www.geeksforgeeks.org/gfg-hiring-solutions-for-recruiters/'}, {'text': 'Job-A-Thon: Hiring Challenge', 'href': 'https://practice.geeksforgeeks.org/events/rec/job-a-thon'}, {'text': 'Sign In', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-tutorial/'}, {'text': 'DSA with JS - Self Paced', 'href': 'https://practice.geeksforgeeks.org/courses/data-structures-and-algorithms-in-javascript'}, {'text': 'JS Tutorial', 'href': 'https://www.geeksforgeeks.org/javascript/'}, {'text': 'JS Exercise', 'href': 'https://www.geeksforgeeks.org/practice-javascript-online/'}, {'text': 'JS Interview Questions', 'href': 'https://www.geeksforgeeks.org/javascript-interview-questions-and-answers/'}, {'text': 'JS Array', 'href': 'https://www.geeksforgeeks.org/javascript-array-reference/'}, {'text': 'JS String', 'href': 'https://www.geeksforgeeks.org/javascript-string-reference/'}, {'text': 'JS Course', 'href': 'https://www.geeksforgeeks.org/courses/javascript'}, {'text': 'JS Object', 'href': 'https://www.geeksforgeeks.org/javascript-object-reference/'}, {'text': 'JS Operator', 'href': 'https://www.geeksforgeeks.org/javascript-operators-reference/'}, {'text': 'JS Date', 'href': 'https://www.geeksforgeeks.org/javascript-date-reference/'}, {'text': 'JS Error', 'href': 'https://www.geeksforgeeks.org/javascript-error-object-complete-reference/'}, {'text': 'JS Projects', 'href': 'https://www.geeksforgeeks.org/top-javascript-projects/'}, {'text': 'JS Set', 'href': 'https://www.geeksforgeeks.org/javascript-set-reference/'}, {'text': 'JS Map', 'href': 'https://www.geeksforgeeks.org/javascript-map-reference/'}, {'text': 'JS RegExp', 'href': 'https://www.geeksforgeeks.org/javascript-regexp-reference/'}, {'text': 'JS Math', 'href': 'https://www.geeksforgeeks.org/javascript-math-reference/'}, {'text': 'JS Number', 'href': 'https://www.geeksforgeeks.org/javascript-number-reference/'}, {'text': 'JS Boolean', 'href': 'https://www.geeksforgeeks.org/javascript-boolean-reference/'}, {'text': 'JS Examples', 'href': 'https://www.geeksforgeeks.org/javascript-examples/'}, {'text': 'JS Free JS Course', 'href': 'https://www.geeksforgeeks.org/learn-javascript-js-roadmap-for-beginners/'}, {'text': 'JS A to Z Guide', 'href': 'https://www.geeksforgeeks.org/javascript-complete-guide/'}, {'text': 'JS Formatter', 'href': 'https://www.geeksforgeeks.org/javascript-formatter/'}, {'text': 'Open In App', 'href': 'https://geeksforgeeksapp.page.link/?link=https://www.geeksforgeeks.org/javascript-tutorial/?type%3Darticle%26id%3D1109174&apn=free.programming.programming&isi=1641848816&ibi=org.geeksforgeeks.GeeksforGeeksDev&efr=1'}, {'text': 'Explore GfG Courses', 'href': 'https://www.geeksforgeeks.org/courses'}, {'text': 'Share Your Experiences', 'href': 'https://write.geeksforgeeks.org/#experiences'}, {'text': 'JavaScript Tutorial', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-tutorial/'}, {'text': 'Introduction to JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-to-javascript/'}, {'text': 'JavaScript Versions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-versions/'}, {'text': 'How to Add JavaScript in HTML Document?', 'href': 'https://www.geeksforgeeks.org/javascript/where-to-put-javascript-in-an-html-document/'}, {'text': 'JavaScript Syntax', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-basic-syntax/'}, {'text': 'JavaScript Output', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-output/'}, {'text': 'JavaScript Comments', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-comments/'}, {'text': 'Variables and Datatypes in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/variables-datatypes-javascript/'}, {'text': 'Global and Local variables in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/global-and-local-variables-in-javascript/'}, {'text': 'JavaScript Let', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-let/'}, {'text': 'JavaScript const', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-const/'}, {'text': 'JavaScript Var Statement', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-var/'}, {'text': 'JavaScript Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-operators/'}, {'text': 'Operator precedence in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/operator-precedence-in-javascript/'}, {'text': 'JavaScript Arithmetic Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-arithmetic-operators/'}, {'text': 'JavaScript Assignment Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-assignment-operators/'}, {'text': 'JavaScript Comparison Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-comparison-operators/'}, {'text': 'JavaScript Logical Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-logical-operators/'}, {'text': 'JavaScript Bitwise Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-bitwise-operators/'}, {'text': 'JavaScript Ternary Operator', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-ternary-operator/'}, {'text': 'JavaScript Comma Operator', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-comma-operator/'}, {'text': 'JavaScript Unary Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-unary-operators/'}, {'text': 'JavaScript in and instanceof operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-relational-operators/'}, {'text': 'JavaScript String Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-string-operators/'}, {'text': 'JavaScript Statements', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-statements/'}, {'text': 'JavaScript if-else', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-if-else/'}, {'text': 'JavaScript switch Statement', 'href': 'https://www.geeksforgeeks.org/javascript/switch-case-in-javascript/'}, {'text': 'JavaScript Break Statement', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-break-statement/'}, {'text': 'JavaScript Continue Statement', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-continue-statement/'}, {'text': 'JavaScript Return Statement', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-return-statement/'}, {'text': 'JavaScript Loops', 'href': 'https://www.geeksforgeeks.org/javascript/loops-in-javascript/'}, {'text': 'JavaScript For Loop', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-for-loop/'}, {'text': 'JavaScript While Loop', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-while-loop/'}, {'text': 'JavaScript For In Loop', 'href': 'https://www.geeksforgeeks.org/javascript/for-in-loop-in-javascript/'}, {'text': 'JavaScript for...of Loop', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-for-of-loop/'}, {'text': 'JavaScript do...while Loop', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-do-while-loop/'}, {'text': 'JavaScript | Performance', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-performance/'}, {'text': 'Debugging in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/debugging-in-javascript/'}, {'text': 'JavaScript Errors Throw and Try to Catch', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-errors-throw-and-try-to-catch/'}, {'text': 'Objects in Javascript', 'href': 'https://www.geeksforgeeks.org/javascript/objects-in-javascript/'}, {'text': 'Introduction to Object Oriented Programming in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-object-oriented-programming-javascript/'}, {'text': 'JavaScript Objects', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-objects/'}, {'text': 'Creating objects in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/creating-objects-in-javascript-4-different-ways/'}, {'text': 'JavaScript JSON Objects', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-json-objects/'}, {'text': 'JavaScript Object Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-object-reference/'}, {'text': 'Functions in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/functions-in-javascript/'}, {'text': 'How to write a function in JavaScript ?', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-write-a-function-in-javascript/'}, {'text': 'JavaScript Function Call', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-function-call/'}, {'text': 'Different ways of writing functions in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/different-ways-of-writing-functions-in-javascipt/'}, {'text': 'Difference between Methods and Functions in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/difference-between-methods-and-functions-in-javascript/'}, {'text': 'Explain the Different Function States in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/explain-the-different-function-states-in-javascript/'}, {'text': 'JavaScript Function Complete Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-function-complete-reference/'}, {'text': 'JavaScript Arrays', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-arrays/'}, {'text': 'JavaScript Array Methods', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-array-methods/'}, {'text': 'Best-Known JavaScript Array Methods', 'href': 'https://www.geeksforgeeks.org/javascript/best-known-javascript-array-methods/'}, {'text': 'Important Array Methods of JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/what-are-the-important-array-methods-of-javascript/'}, {'text': 'JavaScript Array Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-array-reference/'}, {'text': 'JavaScript Strings', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-strings/'}, {'text': 'JavaScript String Methods', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-string-methods/'}, {'text': 'JavaScript String Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-string-reference/'}, {'text': 'JavaScript Numbers', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-numbers/'}, {'text': 'How numbers are stored in JavaScript ?', 'href': 'https://www.geeksforgeeks.org/javascript/how-numbers-are-stored-in-javascript/'}, {'text': 'How to create a Number object using JavaScript ?', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-create-a-number-object-using-javascript/'}, {'text': 'JavaScript Number Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-number-reference/'}, {'text': 'JavaScript Math Object', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-math-object/'}, {'text': 'What is the use of Math object in JavaScript ?', 'href': 'https://www.geeksforgeeks.org/javascript/what-is-the-use-of-math-object-in-javascript/'}, {'text': 'JavaScript Math Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-math-reference/'}, {'text': 'Map in JS', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-map/'}, {'text': 'What is JavaScript Map and how to use it ?', 'href': 'https://www.geeksforgeeks.org/javascript/what-is-javascript-map-and-how-to-use-it/'}, {'text': 'JavaScript Map Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-map-reference/'}, {'text': 'Set in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/sets-in-javascript/'}, {'text': 'How are elements ordered in a Set in JavaScript ?', 'href': 'https://www.geeksforgeeks.org/javascript/how-are-elements-ordered-in-a-set-in-javascript/'}, {'text': 'Iterate over Set in JavaScript or JS', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-iterate-over-set-elements-in-javascript/'}, {'text': 'How to sort a set in JavaScript ?', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-sort-a-set-in-javascript/'}, {'text': 'JavaScript Set Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-set-reference/'}, {'text': 'JavaScript Date', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-date/'}, {'text': 'JavaScript Promise', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-promise/'}, {'text': 'JavaScript BigInt', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-bigint/'}, {'text': 'JavaScript Boolean', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-boolean/'}, {'text': 'JavaScript Proxy/Handler', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-proxy-handler/'}, {'text': 'JavaScript WeakMap', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-weakmap/'}, {'text': 'JavaScript WeakSet', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-weakset/'}, {'text': 'JavaScript Function Generator', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-function-generator/'}, {'text': 'JavaScript JSON', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-json/'}, {'text': 'Arrow functions in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/arrow-functions-in-javascript/'}, {'text': 'JavaScript this Keyword', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-this-keyword/'}, {'text': '"use strict" in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/use-strict-in-javascript/'}, {'text': 'Introduction to ES6', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-to-es6/'}, {'text': 'JavaScript Hoisting', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-hoisting/'}, {'text': 'Async and Await in JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/async-await-function-in-javascript/'}, {'text': 'JavaScript Exercises, Practice Questions and Solutions', 'href': 'https://www.geeksforgeeks.org/javascript/practice-javascript-online/'}, {'text': 'Full Stack DevelopmentCourse', 'href': 'https://www.geeksforgeeks.org/courses/full-stack-node'}, {'text': 'Introduction', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-to-javascript/'}, {'text': 'JS Basics', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-basics-1/'}, {'text': 'Using JS in HTML', 'href': 'https://www.geeksforgeeks.org/javascript/where-to-put-javascript-in-an-html-document/'}, {'text': 'Variables and Datatypes', 'href': 'https://www.geeksforgeeks.org/javascript/variables-datatypes-javascript/'}, {'text': 'Variables & Data Types', 'href': 'https://www.geeksforgeeks.org/quizzes/variables-and-data-types-1/'}, {'text': 'Operators', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-operators/'}, {'text': 'Type Conversion and Coercion', 'href': 'https://www.geeksforgeeks.org/javascript/type-conversion-and-type-coercion-in-javascript/'}, {'text': 'Control Flow Statements', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-control-flow-statements/'}, {'text': 'Operators', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-operators/'}, {'text': 'Control Flow', 'href': 'https://www.geeksforgeeks.org/quizzes/control-flow/'}, {'text': 'Scope', 'href': 'https://www.geeksforgeeks.org/javascript/understanding-variable-scopes-in-javascript/'}, {'text': 'Browser console', 'href': 'https://www.geeksforgeeks.org/javascript/console-in-javascript/'}, {'text': 'Functions', 'href': 'https://www.geeksforgeeks.org/javascript/functions-in-javascript/'}, {'text': 'Function binding', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-function-binding/'}, {'text': 'Hoisting', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-hoisting/'}, {'text': 'Closures', 'href': 'https://www.geeksforgeeks.org/javascript/closure-in-javascript/'}, {'text': 'Higher-Order Functions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-higher-order-functions/'}, {'text': 'Iterator', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-iterator/'}, {'text': 'Function Generator', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-function-generator/'}, {'text': 'Functions', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-functions/'}, {'text': 'Events', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-events/'}, {'text': 'Event Loop', 'href': 'https://www.geeksforgeeks.org/javascript/what-is-an-event-loop-in-javascript/'}, {'text': 'Event Bubbling', 'href': 'https://www.geeksforgeeks.org/javascript/event-bubbling-in-javascript/'}, {'text': 'Event Handling', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-events/'}, {'text': 'Counter Application', 'href': 'https://www.geeksforgeeks.org/javascript/design-a-simple-counter-using-html-css-and-javascript/'}, {'text': 'Prime Number Checker', 'href': 'https://www.geeksforgeeks.org/html/javascript-application-to-check-prime-and-non-prime-number/'}, {'text': 'Show and Hide Password', 'href': 'https://www.geeksforgeeks.org/javascript/show-hide-password-using-javascript/'}, {'text': 'Palindrome Checker App', 'href': 'https://www.geeksforgeeks.org/javascript/build-a-palindrome-checker-app-using-javascript/'}, {'text': 'JavaScript Carousel', 'href': 'https://www.geeksforgeeks.org/html/building-a-carousel-with-vanilla-javascript/'}, {'text': 'Email Validator App', 'href': 'https://www.geeksforgeeks.org/html/javascript-application-for-email-validation/'}, {'text': 'Unicode Character Value', 'href': 'https://www.geeksforgeeks.org/html/javascript-application-get-unicode-character-value/'}, {'text': 'Random Number Generator', 'href': 'https://www.geeksforgeeks.org/html/javascript-application-for-random-number-generator/'}, {'text': 'Random Password Generator', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-generate-a-random-password-using-javascript/'}, {'text': 'Numbers', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-numbers/'}, {'text': 'String', 'href': 'https://www.geeksforgeeks.org/javascript/string-in-javascript/'}, {'text': 'Numbers', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-numbers/'}, {'text': 'String', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-strings-1/?ref=quiz_lbp'}, {'text': 'Array', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-arrays/'}, {'text': 'LinkedList', 'href': 'https://www.geeksforgeeks.org/javascript/implementation-linkedlist-javascript/'}, {'text': 'Arrays', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-arrays-1/'}, {'text': 'Linked List', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-linked-list/'}, {'text': 'Map', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-map/'}, {'text': 'Stack', 'href': 'https://www.geeksforgeeks.org/javascript/implementation-stack-javascript/'}, {'text': 'Queue', 'href': 'https://www.geeksforgeeks.org/javascript/implementation-queue-javascript/'}, {'text': 'Stack', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-stack/'}, {'text': 'Queue', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-queue/'}, {'text': 'Sorting Algorithms', 'href': 'https://www.geeksforgeeks.org/javascript/sorting-algorithms-in-javascript/'}, {'text': 'WeakMap', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-weakmap/'}, {'text': 'WeakSet', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-weakset/'}, {'text': 'Typed Arrays', 'href': 'https://www.geeksforgeeks.org/javascript/typedarray-introduction/'}, {'text': 'Deque', 'href': 'https://www.geeksforgeeks.org/javascript/deque-in-javascript/'}, {'text': 'Priority Queue (Heap)', 'href': 'https://www.geeksforgeeks.org/javascript/implementation-priority-queue-javascript/'}, {'text': 'Data Structure', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-data-structures-quizzes/'}, {'text': 'DSA with JavaScript Tutorial.', 'href': 'https://www.geeksforgeeks.org/dsa/learn-data-structures-with-javascript-dsa-tutorial/'}, {'text': 'Introduction to OOP', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-object-oriented-programming-javascript/'}, {'text': 'Objects', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-object-constructors/'}, {'text': 'Objects', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-objects/?ref=quiz_lbp'}, {'text': 'Classes', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-classes/'}, {'text': 'Constructor Method', 'href': 'https://www.geeksforgeeks.org/javascript/js-constructor-method/'}, {'text': 'this Keyword', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-this-keyword/'}, {'text': 'Prototype', 'href': 'https://www.geeksforgeeks.org/javascript/js-prototype/'}, {'text': 'Static Methods', 'href': 'https://www.geeksforgeeks.org/javascript/js-static-methods/'}, {'text': 'Inheritance', 'href': 'https://write.geeksforgeeks.org/preview/javascript-inheritance/'}, {'text': 'Classes and Inheritance', 'href': 'https://www.geeksforgeeks.org/quizzes/classes-and-inheritance/'}, {'text': 'Encapsulation', 'href': 'https://www.geeksforgeeks.org/javascript/encapsulation-in-javascript/'}, {'text': 'Abstraction', 'href': 'https://www.geeksforgeeks.org/javascript/abstraction-in-javascript/'}, {'text': 'Polymorphism', 'href': 'https://www.geeksforgeeks.org/javascript/polymorphism-in-javascript/'}, {'text': 'Getters and Setters', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-getters-and-setters/'}, {'text': 'OOP', 'href': 'https://www.geeksforgeeks.org/quizzes/oop-in-javascript/'}, {'text': 'Browser Object Model', 'href': 'https://www.geeksforgeeks.org/html/browser-object-model/'}, {'text': 'Document Object Model', 'href': 'https://www.geeksforgeeks.org/html/javascript-html-dom/'}, {'text': 'Manipulate DOM Elements', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-manipulate-dom-elements-in-javascript/'}, {'text': 'Event Handling in the DOM', 'href': 'https://www.geeksforgeeks.org/html/how-to-use-dom-and-events/'}, {'text': 'BOM and DOM', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-dom-and-bom/'}, {'text': 'Callbacks', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-callbacks/'}, {'text': 'Promise', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-promise/'}, {'text': 'Promise Chaining', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-promise-chaining/'}, {'text': 'Async/Await', 'href': 'https://www.geeksforgeeks.org/javascript/async-await-function-in-javascript/'}, {'text': 'Asynchronous JavaScript', 'href': 'https://www.geeksforgeeks.org/quizzes/asynchronous-javascript-1/'}, {'text': 'Price Range Slider with Min-Max Input', 'href': 'https://www.geeksforgeeks.org/javascript/price-range-slider-with-min-max-input-using-html-css-and-javascript/'}, {'text': 'GitHub Profile Search', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-create-a-github-profile-search-using-html-css-and-javascript/'}, {'text': 'Toast Notification', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-make-a-toast-notification-in-html-css-and-javascript/'}, {'text': 'Multi-Step Progress Bar', 'href': 'https://www.geeksforgeeks.org/bootstrap/how-to-create-multi-step-progress-bar-using-bootstrap/'}, {'text': 'Quiz App with Timer', 'href': 'https://www.geeksforgeeks.org/javascript/create-a-quiz-app-with-timer-using-html-css-and-javascript/'}, {'text': 'Expense Tracker', 'href': 'https://www.geeksforgeeks.org/javascript/build-an-expense-tracker-with-html-css-and-javascript/'}, {'text': 'Sortable and Filterable Table', 'href': 'https://www.geeksforgeeks.org/javascript/create-a-sortable-and-filterable-table-using-javascript/'}, {'text': 'Dynamic Resume Builder', 'href': 'https://www.geeksforgeeks.org/javascript/dynamic-resume-creator-using-html-css-and-javascript/'}, {'text': 'OTP Input Field', 'href': 'https://www.geeksforgeeks.org/javascript/create-otp-input-field-using-html-css-and-javascript/'}, {'text': 'Student Grade Calculator', 'href': 'https://www.geeksforgeeks.org/javascript/design-a-student-grade-calculator-using-javascript/'}, {'text': 'JSON Tutorial', 'href': 'https://www.geeksforgeeks.org/javascript/json/'}, {'text': 'JSON vs JavaScript Object', 'href': 'https://www.geeksforgeeks.org/javascript/json-vs-javascript-object/'}, {'text': 'Read JSON File Using JS', 'href': 'https://www.geeksforgeeks.org/javascript/read-json-file-using-javascript/'}, {'text': 'Parse JSON Data in JS', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-parse-json-data-in-javascript/'}, {'text': 'JavaScript JSON Parser', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-json-parser/'}, {'text': 'JavaScript JSON Complete Reference', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-json-complete-reference/'}, {'text': 'JSON', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-json/'}, {'text': 'Regular expressions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-regexpregular-expression/'}, {'text': 'Form Validation', 'href': 'https://www.geeksforgeeks.org/javascript/form-validation-using-javascript/'}, {'text': 'Email Validation', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-validate-email-address-using-regexp-in-javascript/'}, {'text': 'Number Validation', 'href': 'https://www.geeksforgeeks.org/javascript/number-validation-in-javascript/'}, {'text': 'Password Validation', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-program-to-validate-password-using-regular-expressions/'}, {'text': 'URL Validation', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-validate-url-using-regular-expression-in-javascript/'}, {'text': 'UserName Validation', 'href': 'https://www.geeksforgeeks.org/javascript/username-validation-in-js-regex/'}, {'text': 'Regular Expressions', 'href': 'https://www.geeksforgeeks.org/quizzes/regular-expressions-and-json/'}, {'text': 'Exception Handling', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-error-and-exceptional-handling-with-examples/'}, {'text': 'throw Statement', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-errors-throw-and-try-to-catch/'}, {'text': 'try-catch Statement', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-errors-throw-and-try-to-catch/'}, {'text': 'Debugging', 'href': 'https://www.geeksforgeeks.org/javascript/debugging-in-javascript/'}, {'text': 'Error Handling & Debugging', 'href': 'https://www.geeksforgeeks.org/quizzes/error-handling-and-debugging/'}, {'text': 'Unit testing with Jest', 'href': 'https://www.geeksforgeeks.org/javascript/testing-with-jest/'}, {'text': 'Memory Management', 'href': 'https://www.geeksforgeeks.org/javascript/memory-management-in-javascript/'}, {'text': 'Garbage Collection', 'href': 'https://www.geeksforgeeks.org/javascript/garbage-collection-in-javascript/'}, {'text': 'Lazy Loading', 'href': 'https://www.geeksforgeeks.org/javascript/what-is-lazy-loading/'}, {'text': 'Debouncing', 'href': 'https://www.geeksforgeeks.org/javascript/debouncing-in-javascript/'}, {'text': 'Throttling', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-throttling/'}, {'text': 'Testing & Optimization', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-testing-and-optimization/'}, {'text': 'Data Types', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-javascript-data-types/'}, {'text': 'Strings', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-javascript-strings/'}, {'text': 'Functions', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-javascript-functions/'}, {'text': "'this' keyword", 'href': 'https://www.geeksforgeeks.org/javascript/javascript-interesting-facts-about-this-keyword/'}, {'text': 'Set', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-javascript-set/'}, {'text': 'Map', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-map-in-javascript/'}, {'text': 'Arrays', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-javascript-arrays/'}, {'text': 'Object', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-object-in-javascript/'}, {'text': 'Complete JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/interesting-facts-about-javascript/'}, {'text': 'Employee Database Management System', 'href': 'https://www.geeksforgeeks.org/javascript/employee-database-management-system-using-html-css-and-javascript/'}, {'text': 'Nested Chat Comments', 'href': 'https://www.geeksforgeeks.org/javascript/design-a-nested-chat-comments-using-html-css-and-javascript/'}, {'text': 'Responsive Admin Dashboard', 'href': 'https://www.geeksforgeeks.org/javascript/how-to-create-responsive-admin-dashboard-using-html-css-javascript/'}, {'text': 'Task Scheduler', 'href': 'https://www.geeksforgeeks.org/javascript/task-scheduler-using-html-css-and-js/'}, {'text': 'Dragon’s World Game', 'href': 'https://www.geeksforgeeks.org/javascript/design-dragons-world-game-using-html-css-and-javascript/'}, {'text': 'Tic-Tac-Toe Game', 'href': 'https://www.geeksforgeeks.org/javascript/simple-tic-tac-toe-game-using-javascript/'}, {'text': 'QR Code Generator', 'href': 'https://www.geeksforgeeks.org/html/create-an-qr-code-generator-project-using-html-css-javascript/'}, {'text': 'Resize and Compress Images', 'href': 'https://www.geeksforgeeks.org/javascript/create-a-resize-and-compress-images-in-html-css-javascript/'}, {'text': 'QR Code Scanner or Reader', 'href': 'https://www.geeksforgeeks.org/javascript/create-a-qr-code-scanner-or-reader-in-html-css-javascript/'}, {'text': 'JavaScript Project Ideas with Source Code', 'href': 'https://www.geeksforgeeks.org/javascript/top-javascript-projects/'}, {'text': 'Quizzes', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-quiz/'}, {'text': 'Practice Quiz-1', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-course-quiz-1/'}, {'text': 'Practice Quiz-2', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-course-quiz-2/'}, {'text': 'Practice Quiz-3', 'href': 'https://www.geeksforgeeks.org/quizzes/javascript-course-quiz-3/'}, {'text': 'Coding Problems', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-coding-practice-problem/'}, {'text': 'JavaScript Exercises, Practice Questions and Solutions', 'href': 'https://www.geeksforgeeks.org/javascript/practice-javascript-online/'}, {'text': 'JavaScript String Exercise', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-string-programming-examples/'}, {'text': 'JavaScript Array Exercise', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-array-exercise/'}, {'text': 'JavaScript Coding Questions and Answers', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-coding-questions-and-answers/'}, {'text': 'JavaScript Programming Examples', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-examples/'}, {'text': 'JavaScript Interview Questions and Answers (2025) For Begineers', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-interview-questions/'}, {'text': 'Intermediate JavaScript Interview Questions and Answers (2025)', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-interview-questions-and-answers-set-2/'}, {'text': 'Advance JS Interview Questions and Answers (2025) For Experienced', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-interview-questions-and-answers-set-2/'}, {'text': 'JavaScript this Operator Interview Questions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-this-operator-interview-questions/'}, {'text': 'JavaScript String Interview Questions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-string-interview-questions-and-answers/'}, {'text': 'JavaScript Array Interview Questions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-array-interview-questions-and-answers/'}, {'text': 'JavaScript Object Interview Questions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-object-interview-questions/'}, {'text': 'Top 50 Array Coding Problems for Interviews', 'href': 'https://www.geeksforgeeks.org/dsa/top-50-array-coding-problems-for-interviews/'}, {'text': 'JavaScript Output Based Interview Questions', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-output-based-interview-questions/'}, {'text': 'JavaScript Cheat Sheet', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-cheat-sheet-a-basic-guide-to-javascript/'}, {'text': ':React', 'href': 'https://www.geeksforgeeks.org/reactjs/react/'}, {'text': 'Preact', 'href': 'https://www.geeksforgeeks.org/reactjs/difference-between-preact-and-angular/'}, {'text': 'Lodash', 'href': 'https://www.geeksforgeeks.org/javascript/lodash/'}, {'text': 'Moment.js', 'href': 'https://www.geeksforgeeks.org/javascript/moment-js/'}, {'text': 'jQuery', 'href': 'https://www.geeksforgeeks.org/javascript/moment-js/'}, {'text': 'Axios', 'href': 'https://www.geeksforgeeks.org/reactjs/axios-in-react-a-guide-for-beginners/'}, {'text': 'Socket.io', 'href': 'https://www.geeksforgeeks.org/node-js/introduction-to-sockets-io-in-node-js/'}, {'text': 'JWT', 'href': 'https://www.geeksforgeeks.org/web-tech/json-web-token-jwt/'}, {'text': 'Bcrypt', 'href': 'https://www.geeksforgeeks.org/node-js/npm-bcrypt/'}, {'text': 'Passport.js', 'href': 'https://www.geeksforgeeks.org/node-js/explain-passport-in-node-js/'}, {'text': 'CORS', 'href': 'https://www.geeksforgeeks.org/node-js/npm-cors/'}, {'text': 'Vue.js', 'href': 'https://www.geeksforgeeks.org/javascript/vue-js/'}, {'text': 'Angular', 'href': 'https://www.geeksforgeeks.org/angular-js/angular-tutorial/'}, {'text': 'Next.js', 'href': 'https://www.geeksforgeeks.org/nextjs/nextjs-tutorial/'}, {'text': 'Nuxt.js', 'href': 'https://www.geeksforgeeks.org/javascript/nuxtjs/'}, {'text': 'Gatsby', 'href': 'https://www.geeksforgeeks.org/javascript/gatsby-introduction/'}, {'text': 'Remix', 'href': 'https://www.geeksforgeeks.org/javascript/getting-started-with-remix/'}, {'text': 'Express.js', 'href': 'https://www.geeksforgeeks.org/node-js/express-js/'}, {'text': 'NestJS', 'href': 'https://www.geeksforgeeks.org/javascript/nestjs/'}, {'text': 'Koa.js', 'href': 'https://www.geeksforgeeks.org/node-js/express-js-vs-koajs-in-node-js/'}, {'text': 'Fastify', 'href': 'https://www.geeksforgeeks.org/node-js/difference-between-express-and-fastify-web-app-frameworks/'}, {'text': 'Meteor.js', 'href': 'https://www.geeksforgeeks.org/websites-apps/meteor-introduction-to-meteor/'}, {'text': 'Web Development', 'href': 'https://www.geeksforgeeks.org/web-tech/web-development/'}, {'text': 'Mobile App Development', 'href': 'https://www.geeksforgeeks.org/blogs/top-javascript-frameworks-for-mobile-apps-development/'}, {'text': 'Game Development', 'href': 'https://www.geeksforgeeks.org/blogs/top-javascript-frameworks-libraries-for-building-games/'}, {'text': 'Server-Side Development', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-backend-basics/'}, {'text': 'Scripting & Automation', 'href': 'https://www.geeksforgeeks.org/javascript/what-is-scripting/'}, {'text': 'Web Scraping', 'href': 'https://www.geeksforgeeks.org/node-js/what-is-web-scraping-in-node-js/'}, {'text': 'Puppeteer', 'href': 'https://www.geeksforgeeks.org/node-js/npm-puppeteer/'}, {'text': 'IoT (Internet of Things)', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-for-iot/'}, {'text': 'Real-Time Applications', 'href': 'https://www.geeksforgeeks.org/blogs/how-to-implement-real-time-features-in-your-web-app-with-example/'}, {'text': 'JavaScript Course', 'href': 'https://www.geeksforgeeks.org/courses/javascript'}, {'text': 'JavaScript Complete Guide – A to Z', 'href': 'https://www.geeksforgeeks.org/javascript/javascript-complete-guide/'}, {'text': 'Visit Course', 'href': 'https://www.geeksforgeeks.org/courses/javascript'}, {'text': 'Campus Training Program', 'href': 'https://www.geeksforgeeks.org/campus-training-program/'}, {'text': 'Next Article', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-to-javascript'}, {'text': 'Introduction to JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/introduction-to-javascript'}, {'text': 'K', 'href': 'https://www.geeksforgeeks.org/user/kartik/'}, {'text': 'kartik', 'href': 'https://www.geeksforgeeks.org/user/kartik/'}, {'text': 'JavaScript', 'href': 'https://www.geeksforgeeks.org/category/web-technologies/javascript/'}, {'text': 'Web Technologies', 'href': 'https://www.geeksforgeeks.org/category/web-technologies/'}, {'text': 'Tutorials', 'href': 'https://www.geeksforgeeks.org/tag/tutorials/'}, {'text': 'Web-Tech Tutorials', 'href': 'https://www.geeksforgeeks.org/tag/web-tech-tutorials/'}, {'text': '203k+ interested GeeksC Programming Course Online - Learn C with Data StructuresExplore', 'href': 'https://www.geeksforgeeks.org/courses/c-Programming-basic-to-advanced'}, {'text': '678k+ interested GeeksDSA to Development: A Complete GuideExplore', 'href': 'https://www.geeksforgeeks.org/courses/dsa-to-development-coding-guide'}, {'text': '79k+ interested GeeksReact JS Course Online - React JS Certification CourseExplore', 'href': 'https://www.geeksforgeeks.org/courses/react-js-beginner-to-advance'}, {'text': 'Advertise with us', 'href': 'https://www.geeksforgeeks.org/advertise-with-us/'}, {'text': 'About Us', 'href': 'https://www.geeksforgeeks.org/about/'}, {'text': 'Legal', 'href': 'https://www.geeksforgeeks.org/legal/'}, {'text': 'Privacy Policy', 'href': 'https://www.geeksforgeeks.org/legal/privacy-policy/'}, {'text': 'Careers', 'href': 'https://geeksforgeeks.zohorecruit.in/careers'}, {'text': 'In Media', 'href': 'https://www.geeksforgeeks.org/press-release/'}, {'text': 'Contact Us', 'href': 'https://www.geeksforgeeks.org/about/contact-us/'}, {'text': 'Corporate Solution', 'href': 'https://www.geeksforgeeks.org/gfg-corporate-solution/'}, {'text': 'Campus Training Program', 'href': 'https://www.geeksforgeeks.org/campus-training-program/'}, {'text': 'Job-A-Thon', 'href': 'https://practice.geeksforgeeks.org/events/rec/job-a-thon/'}, {'text': 'Offline Classroom Program', 'href': 'https://www.geeksforgeeks.org/courses/category/all?courseType=offline&courseFeeType=all'}, {'text': 'DSA in JAVA/C++', 'href': 'https://www.geeksforgeeks.org/courses/dsa-self-paced'}, {'text': 'Master System Design', 'href': 'https://www.geeksforgeeks.org/courses/mastering-system-design-low-level-to-high-level-solutions'}, {'text': 'Master CP', 'href': 'https://www.geeksforgeeks.org/courses/competitive-programming-cp'}, {'text': 'Videos', 'href': 'https://www.geeksforgeeks.org/videos/'}, {'text': 'Python', 'href': 'https://www.geeksforgeeks.org/python-programming-language/'}, {'text': 'Java', 'href': 'https://www.geeksforgeeks.org/java/'}, {'text': 'C++', 'href': 'https://www.geeksforgeeks.org/c-plus-plus/'}, {'text': 'PHP', 'href': 'https://www.geeksforgeeks.org/php-tutorials/'}, {'text': 'GoLang', 'href': 'https://www.geeksforgeeks.org/golang/'}, {'text': 'SQL', 'href': 'https://www.geeksforgeeks.org/sql-tutorial/'}, {'text': 'R Language', 'href': 'https://www.geeksforgeeks.org/r-tutorial/'}, {'text': 'Android', 'href': 'https://www.geeksforgeeks.org/android-tutorial/'}, {'text': 'DSA', 'href': 'https://www.geeksforgeeks.org/learn-data-structures-and-algorithms-dsa-tutorial/'}, {'text': 'DSA Tutorial', 'href': 'https://www.geeksforgeeks.org/dsa-tutorial-learn-data-structures-and-algorithms/'}, {'text': 'Problem Of The Day', 'href': 'https://www.geeksforgeeks.org/problem-of-the-day'}, {'text': 'GfG 160', 'href': 'https://www.geeksforgeeks.org/courses/gfg-160-series'}, {'text': 'DSA 360', 'href': 'https://www.geeksforgeeks.org/courses/dsa-skill-up'}, {'text': 'DSA Roadmap', 'href': 'https://www.geeksforgeeks.org/complete-roadmap-to-learn-dsa-from-scratch/'}, {'text': 'DSA Interview Questions', 'href': 'https://www.geeksforgeeks.org/top-100-data-structure-and-algorithms-dsa-interview-questions-topic-wise/'}, {'text': 'Competitive Programming', 'href': 'https://www.geeksforgeeks.org/competitive-programming-a-complete-guide/'}, {'text': 'Data Science & ML', 'href': 'https://www.geeksforgeeks.org/ai-ml-ds/'}, {'text': 'Data Science With Python', 'href': 'https://www.geeksforgeeks.org/data-science-tutorial/'}, {'text': 'Machine Learning', 'href': 'https://www.geeksforgeeks.org/machine-learning/'}, {'text': 'ML Maths', 'href': 'https://www.geeksforgeeks.org/machine-learning-mathematics/'}, {'text': 'Data Visualisation', 'href': 'https://www.geeksforgeeks.org/python-data-visualization-tutorial/'}, {'text': 'Pandas', 'href': 'https://www.geeksforgeeks.org/pandas-tutorial/'}, {'text': 'NumPy', 'href': 'https://www.geeksforgeeks.org/numpy-tutorial/'}, {'text': 'NLP', 'href': 'https://www.geeksforgeeks.org/natural-language-processing-nlp-tutorial/'}, {'text': 'Deep Learning', 'href': 'https://www.geeksforgeeks.org/deep-learning-tutorial/'}, {'text': 'Web Technologies', 'href': 'https://www.geeksforgeeks.org/web-technology/'}, {'text': 'HTML', 'href': 'https://www.geeksforgeeks.org/html/'}, {'text': 'CSS', 'href': 'https://www.geeksforgeeks.org/css/'}, {'text': 'JavaScript', 'href': 'https://www.geeksforgeeks.org/javascript/'}, {'text': 'TypeScript', 'href': 'https://www.geeksforgeeks.org/typescript/'}, {'text': 'ReactJS', 'href': 'https://www.geeksforgeeks.org/learn-reactjs/'}, {'text': 'NextJS', 'href': 'https://www.geeksforgeeks.org/nextjs/'}, {'text': 'NodeJs', 'href': 'https://www.geeksforgeeks.org/nodejs/'}, {'text': 'Bootstrap', 'href': 'https://www.geeksforgeeks.org/bootstrap/'}, {'text': 'Tailwind CSS', 'href': 'https://www.geeksforgeeks.org/tailwind-css/'}, {'text': 'Python Tutorial', 'href': 'https://www.geeksforgeeks.org/python-programming-language/'}, {'text': 'Python Examples', 'href': 'https://www.geeksforgeeks.org/python-programming-examples/'}, {'text': 'Django Tutorial', 'href': 'https://www.geeksforgeeks.org/django-tutorial/'}, {'text': 'Python Projects', 'href': 'https://www.geeksforgeeks.org/python-projects-beginner-to-advanced/'}, {'text': 'Python Tkinter', 'href': 'https://www.geeksforgeeks.org/python-tkinter-tutorial/'}, {'text': 'Web Scraping', 'href': 'https://www.geeksforgeeks.org/python-web-scraping-tutorial/'}, {'text': 'OpenCV Tutorial', 'href': 'https://www.geeksforgeeks.org/opencv-python-tutorial/'}, {'text': 'Python Interview Question', 'href': 'https://www.geeksforgeeks.org/python-interview-questions/'}, {'text': 'GATE CS Notes', 'href': 'https://www.geeksforgeeks.org/gate-cs-notes-gq/'}, {'text': 'Operating Systems', 'href': 'https://www.geeksforgeeks.org/operating-systems/'}, {'text': 'Computer Network', 'href': 'https://www.geeksforgeeks.org/computer-network-tutorials/'}, {'text': 'Database Management System', 'href': 'https://www.geeksforgeeks.org/dbms/'}, {'text': 'Software Engineering', 'href': 'https://www.geeksforgeeks.org/software-engineering/'}, {'text': 'Digital Logic Design', 'href': 'https://www.geeksforgeeks.org/digital-electronics-logic-design-tutorials/'}, {'text': 'Engineering Maths', 'href': 'https://www.geeksforgeeks.org/engineering-mathematics-tutorials/'}, {'text': 'DevOps', 'href': 'https://www.geeksforgeeks.org/devops-tutorial/'}, {'text': 'Git', 'href': 'https://www.geeksforgeeks.org/git-tutorial/'}, {'text': 'AWS', 'href': 'https://www.geeksforgeeks.org/aws-tutorial/'}, {'text': 'Docker', 'href': 'https://www.geeksforgeeks.org/docker-tutorial/'}, {'text': 'Kubernetes', 'href': 'https://www.geeksforgeeks.org/kubernetes-tutorial/'}, {'text': 'Azure', 'href': 'https://www.geeksforgeeks.org/microsoft-azure/'}, {'text': 'GCP', 'href': 'https://www.geeksforgeeks.org/google-cloud-platform-tutorial/'}, {'text': 'DevOps Roadmap', 'href': 'https://www.geeksforgeeks.org/devops-roadmap/'}, {'text': 'System Design', 'href': 'https://www.geeksforgeeks.org/system-design-tutorial/'}, {'text': 'High Level Design', 'href': 'https://www.geeksforgeeks.org/what-is-high-level-design-learn-system-design/'}, {'text': 'Low Level Design', 'href': 'https://www.geeksforgeeks.org/what-is-low-level-design-or-lld-learn-system-design/'}, {'text': 'UML Diagrams', 'href': 'https://www.geeksforgeeks.org/unified-modeling-language-uml-introduction/'}, {'text': 'Interview Guide', 'href': 'https://www.geeksforgeeks.org/system-design-interview-guide/'}, {'text': 'Design Patterns', 'href': 'https://www.geeksforgeeks.org/software-design-patterns/'}, {'text': 'OOAD', 'href': 'https://www.geeksforgeeks.org/object-oriented-analysis-and-design/'}, {'text': 'System Design Bootcamp', 'href': 'https://www.geeksforgeeks.org/system-design-interview-bootcamp-guide/'}, {'text': 'Interview Questions', 'href': 'https://www.geeksforgeeks.org/most-commonly-asked-system-design-interview-problems-questions/'}, {'text': 'Mathematics', 'href': 'https://www.geeksforgeeks.org/maths/'}, {'text': 'Physics', 'href': 'https://www.geeksforgeeks.org/physics/'}, {'text': 'Chemistry', 'href': 'https://www.geeksforgeeks.org/chemistry/'}, {'text': 'Biology', 'href': 'https://www.geeksforgeeks.org/biology/'}, {'text': 'Social Science', 'href': 'https://www.geeksforgeeks.org/social-science/'}, {'text': 'English Grammar', 'href': 'https://www.geeksforgeeks.org/english-grammar/'}, {'text': 'Databases', 'href': 'https://www.geeksforgeeks.org/getting-started-with-database-management-system/'}, {'text': 'SQL', 'href': 'https://www.geeksforgeeks.org/sql-tutorial/'}, {'text': 'MYSQL', 'href': 'https://www.geeksforgeeks.org/mysql-tutorial/'}, {'text': 'PostgreSQL', 'href': 'https://www.geeksforgeeks.org/postgresql-tutorial/'}, {'text': 'PL/SQL', 'href': 'https://www.geeksforgeeks.org/pl-sql-tutorial/'}, {'text': 'MongoDB', 'href': 'https://www.geeksforgeeks.org/mongodb-tutorial/'}, {'text': 'Preparation Corner', 'href': 'https://www.geeksforgeeks.org/technical-interview-preparation/'}, {'text': 'Company-Wise Recruitment Process', 'href': 'https://www.geeksforgeeks.org/company-wise-recruitment-process/'}, {'text': 'Aptitude Preparation', 'href': 'https://www.geeksforgeeks.org/aptitude-questions-and-answers/'}, {'text': 'Puzzles', 'href': 'https://www.geeksforgeeks.org/puzzles/'}, {'text': 'Company-Wise Preparation', 'href': 'https://www.geeksforgeeks.org/company-preparation/'}, {'text': 'More Tutorials', 'href': 'https://www.geeksforgeeks.org/geeksforgeeks-online-tutorials-free/'}, {'text': 'Software Development', 'href': 'https://www.geeksforgeeks.org/software-development/'}, {'text': 'Software Testing', 'href': 'https://www.geeksforgeeks.org/software-testing-tutorial/'}, {'text': 'Product Management', 'href': 'https://www.geeksforgeeks.org/product-management/'}, {'text': 'Project Management', 'href': 'https://www.geeksforgeeks.org/project-management-tutorial/'}, {'text': 'Linux', 'href': 'https://www.geeksforgeeks.org/linux-tutorial/'}, {'text': 'Excel', 'href': 'https://www.geeksforgeeks.org/excel-tutorial/'}, {'text': 'All Cheat Sheets', 'href': 'https://www.geeksforgeeks.org/geeksforgeeks-master-sheet-list-of-all-cheat-sheets/'}, {'text': 'IBM Certification Courses', 'href': 'https://www.geeksforgeeks.org/courses/category/ibm-certification'}, {'text': 'DSA and Placements', 'href': 'https://www.geeksforgeeks.org/courses/category/dsa-placements'}, {'text': 'Web Development', 'href': 'https://www.geeksforgeeks.org/courses/category/development-testing'}, {'text': 'Data Science', 'href': 'https://www.geeksforgeeks.org/courses/category/machine-learning-data-science'}, {'text': 'Programming Languages', 'href': 'https://www.geeksforgeeks.org/courses/category/programming-languages'}, {'text': 'DevOps & Cloud', 'href': 'https://www.geeksforgeeks.org/courses/category/cloud-devops'}, {'text': 'C Programming with Data Structures', 'href': 'https://www.geeksforgeeks.org/courses/c-Programming-basic-to-advanced'}, {'text': 'C++ Programming Course', 'href': 'https://www.geeksforgeeks.org/courses/cpp-programming-basic-to-advanced'}, {'text': 'Java Programming Course', 'href': 'https://www.geeksforgeeks.org/courses/java-online-course-complete-beginner-to-advanced'}, {'text': 'Python Full Course', 'href': 'https://www.geeksforgeeks.org/courses/master-python-complete-beginner-to-advanced'}, {'text': 'DevOps Engineering', 'href': 'https://www.geeksforgeeks.org/courses/devops-live'}, {'text': 'AWS Solutions Architect Certification', 'href': 'https://www.geeksforgeeks.org/courses/AWS-solutions-architect-certification-training-program-live'}, {'text': 'Salesforce Certified Administrator Course', 'href': 'https://www.geeksforgeeks.org/courses/salesforce-certified-administrator'}, {'text': 'GATE 2026', 'href': 'https://www.geeksforgeeks.org/courses/category/gate'}, {'text': 'GATE CS Rank Booster', 'href': 'https://www.geeksforgeeks.org/courses/gate-rank-booster'}, {'text': 'GATE DA Rank Booster', 'href': 'https://www.geeksforgeeks.org/courses/gate-da-rank-booster'}, {'text': 'GATE CS & IT Course - 2026', 'href': 'https://www.geeksforgeeks.org/courses/gate-2026-csit'}, {'text': 'GATE DA Course 2026', 'href': 'https://www.geeksforgeeks.org/courses/gate-da-2026'}, {'text': 'GATE Rank Predictor', 'href': 'https://www.geeksforgeeks.org/gate-rank-predictor'}, {'text': '@GeeksforGeeks, Sanchhaya Education Private Limited', 'href': 'https://www.geeksforgeeks.org/'}, {'text': 'All rights reserved', 'href': 'https://www.geeksforgeeks.org/copyright-information/'}, {'text': 'Cookie Policy', 'href': 'https://www.geeksforgeeks.org/cookie-policy/'}, {'text': 'Privacy Policy', 'href': 'https://www.geeksforgeeks.org/privacy-policy/'}, {'text': 'Interview Experiences', 'href': 'https://write.geeksforgeeks.org/posts-new?cid=e8fc46fe-75e7-4a4b-be3c-0c862d655ed0'}, {'text': 'Admission Experiences', 'href': 'https://write.geeksforgeeks.org/posts-new?cid=82536bdb-84e6-4661-87c3-e77c3ac04ede'}, {'text': 'Career Journeys', 'href': 'https://write.geeksforgeeks.org/posts-new?cid=5219b0b2-7671-40a0-9bda-503e28a61c31'}, {'text': 'Work Experiences', 'href': 'https://write.geeksforgeeks.org/posts-new?cid=22ae3354-15b6-4dd4-a5b4-5c7a105b8a8f'}, {'text': 'Campus Experiences', 'href': 'https://write.geeksforgeeks.org/posts-new?cid=c5e1ac90-9490-440a-a5fa-6180c87ab8ae'}, {'text': 'Competitive Exam Experiences', 'href': 'https://write.geeksforgeeks.org/posts-new?cid=5ebb8fe9-b980-4891-af07-f2d62a9735f2'}, {'text': 'Privacy Policy', 'href': 'https://www.geeksforgeeks.org/privacy-policy/'}, {'text': 'Cookie Policy.', 'href': 'https://www.geeksforgeeks.org/legal/privacy-policy/#:~:text=the%20appropriate%20measures.-,COOKIE%20POLICY,-A%20cookie%20is'}], 'tables': [[['Feature', 'JavaScript', 'Python', 'C++', 'Java'], ['Type', 'Interpreted', 'Interpreted', 'Compiled', 'Compiled and Interpreted'], ['Paradigm', 'Multi-paradigm (event-driven, functional, object-oriented)', 'Multi-paradigm (object-oriented, procedural, functional)', 'Multi-paradigm (procedural, object-oriented, generic)', 'Object-oriented, structured'], ['Memory Management', 'Automatic (Garbage collection)', 'Automatic (Garbage collection)', 'Manual', 'Automatic (Garbage collection)'], ['Syntax', 'Simple', 'Simple', 'Complex', 'Complex'], ['Use Cases', 'Web development, mobile apps, real-time applications', 'Web development, data analysis, machine learning', 'System programming, game development, high-performance applications', 'Large-scale applications, enterprise software'], ['Notable Frameworks/Libraries', 'React, Angular, Node.js', 'Django, Flask', 'Standard Library, Boost', 'Spring, Hibernate'], ['Community Support', 'Strong', 'Strong', 'Strong', 'Strong'], ['Job Market', 'Abundant', 'Abundant', 'Abundant', 'Abundant']], [['Company', 'Description'], ['Google', 'Google uses JavaScript extensively in its web services, including Gmail and Google Maps.'], ['Facebook', 'Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface.'], ['Netflix', 'Netflix uses JavaScript for their interactive user interface and in their backend services.'], ['Airbnb', 'Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end.'], ['LinkedIn', 'LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction.'], ['Uber', 'JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies.'], ['Twitter', 'Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience.'], ['PayPal', 'PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences.'], ['eBay', 'eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions.'], ['Slack', "Slack's web client and several of its real-time communication features are powered by JavaScript."]], [['Career', 'Average Salary (INR) Per Annum', 'Average Salary (USD) Per Annum'], ['JavaScript Developer', '₹500,000 – ₹1,200,000', '$60,000 – $110,000'], ['Front-End Developer', '₹600,000 – ₹1,400,000', '$65,000 – $120,000'], ['Full Stack Developer', '₹700,000 – ₹1,500,000', '$75,000 – $130,000'], ['Back-End Developer', '₹600,000 – ₹1,300,000', '$70,000 – $125,000'], ['Web Developer', '₹500,000 – ₹1,200,000', '$55,000 – $100,000'], ['React Developer', '₹600,000 – ₹1,300,000', '$70,000 – $125,000'], ['Node.js Developer', '₹700,000 – ₹1,600,000', '$75,000 – $135,000'], ['UX/UI Designer', '₹600,000 – ₹1,300,000', '$65,000 – $120,000'], ['Software Engineer', '₹500,000 – ₹1,500,000', '$65,000 – $120,000']]], 'meta': [{'viewport': 'width=device-width, initial-scale=1.0, minimum-scale=0.5, maximum-scale=3.0'}, {'robots': 'index, follow, max-image-preview:large, max-snippet:-1'}, {'theme-color': '#308D46'}, {'image': 'https://media.geeksforgeeks.org/wp-content/cdn-uploads/gfg_200x200-min.png'}, {'og:image:type': 'image/png'}, {'og:image:width': '200'}, {'og:image:height': '200'}, {'facebook-domain-verification': 'xo7t4ve2wn3ywfkjdvwbrk01pvdond'}, {'og:title': 'JavaScript Tutorial - GeeksforGeeks'}, {'description': 'Your All-in-One Learning Portal: GeeksforGeeks is a comprehensive educational platform that empowers learners across domains-spanning computer science and programming, school education, upskilling, commerce, software tools, competitive exams, and more.'}, {'og:url': 'https://www.geeksforgeeks.org/javascript/javascript-tutorial/'}, {'keywords': 'JavaScript, dynamic content, client-side scripting, server-side programming, web development, JavaScript frameworks, Node.js, React, asynchronous programming, Object-Oriented Programming, data structures, event handling, JavaScript libraries, real-time applications, JavaScript interview questions'}, {'og:site_name': 'GeeksforGeeks'}, {'og:image': 'https://media.geeksforgeeks.org/wp-content/uploads/20241218123950915513/JavaScript-Frameworks-and-Libraries.webp'}, {'article:section': 'JavaScript'}, {'article:tag': 'Tutorials'}, {'article:tag': 'Web-Tech Tutorials'}, {'og:type': 'article'}, {'og:locale': 'en_US'}, {'article:published_time': '2023-12-11 17:06:04+00:00'}, {'article:modified_time': '2025-07-23 16:51:19+00:00'}, {'og:updated_time': '2025-07-23 16:51:19+00:00'}, {'og:image:secure_url': 'https://media.geeksforgeeks.org/wp-content/uploads/20241218123950915513/JavaScript-Frameworks-and-Libraries.webp'}, {'og:description': 'Your All-in-One Learning Portal: GeeksforGeeks is a comprehensive educational platform that empowers learners across domains-spanning computer science and programming, school education, upskilling, commerce, software tools, competitive exams, and more.'}, {'msapplication-TileImage': 'https://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png'}, {'viewport': 'width=device-width, initial-scale=1.0'}], 'content_blocks': ["Skip to content Courses DSA to Development GATE 2026 Prep Get 3 IBM Certifications For Working Professionals Interview 101: DSA & System Design Data Science Training Program JAVA Backend Development (Live) Data Analytics Training DevOps Engineering (LIVE) Data Structures & Algorithms in Python For Students Placement Preparation with DSA Data Science (Live) Data Structure & Algorithm-Self Paced (C++/JAVA) Master Competitive Programming Full Stack Development with React & Node JS (Live) (NEW) Digital Marketing Program Full Stack Development Data Science & ML Program All Courses Tutorials Python Java Data Structures & Algorithms ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps And Linux School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day ETS TOEFL: Scholarship Contest Jobs Become a Mentor Apply Now! Post Jobs Job-A-Thon: Hiring Challenge Switch to Dark Mode Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Sign In", "Courses DSA to Development GATE 2026 Prep Get 3 IBM Certifications For Working Professionals Interview 101: DSA & System Design Data Science Training Program JAVA Backend Development (Live) Data Analytics Training DevOps Engineering (LIVE) Data Structures & Algorithms in Python For Students Placement Preparation with DSA Data Science (Live) Data Structure & Algorithm-Self Paced (C++/JAVA) Master Competitive Programming Full Stack Development with React & Node JS (Live) (NEW) Digital Marketing Program Full Stack Development Data Science & ML Program All Courses Tutorials Python Java Data Structures & Algorithms ML & Data Science Interview Corner Programming Languages Web Development GATE CS Subjects DevOps And Linux School Learning Software and Tools Practice Practice Coding Problems Nation Skillup- Free Courses Problem of the Day ETS TOEFL: Scholarship Contest Jobs Become a Mentor Apply Now! Post Jobs Job-A-Thon: Hiring Challenge Switch to Dark Mode Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!! Sign In", "Notifications Mark all as read All View All Notifications Mark all as read All Unread Read You're all caught up!!", 'DSA with JS - Self Paced JS Tutorial JS Exercise JS Interview Questions JS Array JS String JS Course JS Object JS Operator JS Date JS Error JS Projects JS Set JS Map JS RegExp JS Math JS Number JS Boolean JS Examples JS Free JS Course JS A to Z Guide JS Formatter', 'What kind of Experience do you want to share? Interview Experiences Admission Experiences Career Journeys Work Experiences Campus Experiences Competitive Exam Experiences', 'JavaScript Tutorial Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 216 Likes Like Report JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials Like 216', 'JavaScript Tutorial Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 216 Likes Like Report JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials', 'Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal. Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all.', 'Suggest Changes Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal.', 'Create Improvement Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all.', 'Log in New user ? Register Now Continue with Google or Username or Email Password Remember me Forgot Password Sign In By creating this account, you agree to our Privacy Policy & Cookie Policy. Create Account Already have an account ? Log in Continue with Google or Username or Email Password Institution / Organization Sign Up *Please enter your email address or userHandle. Back to Login Reset Password', 'Explore GfG Courses Share Your Experiences JavaScript Tutorial JavaScript Basics Introduction to JavaScript JavaScript Versions How to Add JavaScript in HTML Document? JavaScript Syntax JavaScript Output JavaScript Comments JS Variables & Datatypes Variables and Datatypes in JavaScript Global and Local variables in JavaScript JavaScript Let JavaScript const JavaScript Var Statement JS Operators JavaScript Operators Operator precedence in JavaScript JavaScript Arithmetic Operators JavaScript Assignment Operators JavaScript Comparison Operators JavaScript Logical Operators JavaScript Bitwise Operators JavaScript Ternary Operator JavaScript Comma Operator JavaScript Unary Operators JavaScript in and instanceof operators JavaScript String Operators JS Statements JavaScript Statements JavaScript if-else JavaScript switch Statement JavaScript Break Statement JavaScript Continue Statement JavaScript Return Statement JS Loops JavaScript Loops JavaScript For Loop JavaScript While Loop JavaScript For In Loop JavaScript for...of Loop JavaScript do...while Loop JS Perfomance & Debugging JavaScript | Performance Debugging in JavaScript JavaScript Errors Throw and Try to Catch JS Object Objects in Javascript Introduction to Object Oriented Programming in JavaScript JavaScript Objects Creating objects in JavaScript JavaScript JSON Objects JavaScript Object Reference JS Function Functions in JavaScript How to write a function in JavaScript ? JavaScript Function Call Different ways of writing functions in JavaScript Difference between Methods and Functions in JavaScript Explain the Different Function States in JavaScript JavaScript Function Complete Reference JS Array JavaScript Arrays JavaScript Array Methods Best-Known JavaScript Array Methods Important Array Methods of JavaScript JavaScript Array Reference JS String JavaScript Strings JavaScript String Methods JavaScript String Reference JS Numbers JavaScript Numbers How numbers are stored in JavaScript ? How to create a Number object using JavaScript ? JavaScript Number Reference JS Math JavaScript Math Object What is the use of Math object in JavaScript ? JavaScript Math Reference JS Map Map in JS What is JavaScript Map and how to use it ? JavaScript Map Reference JS Set Set in JavaScript How are elements ordered in a Set in JavaScript ? Iterate over Set in JavaScript or JS How to sort a set in JavaScript ? JavaScript Set Reference JS Objects JavaScript Date JavaScript Promise JavaScript BigInt JavaScript Boolean JavaScript Proxy/Handler JavaScript WeakMap JavaScript WeakSet JavaScript Function Generator JavaScript JSON JS Advance Arrow functions in JavaScript JavaScript this Keyword "use strict" in JavaScript Introduction to ES6 JavaScript Hoisting Async and Await in JavaScript JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions Full Stack Development Course JavaScript Tutorial Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 216 Likes Like Report JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials Like 216 203k+ interested Geeks C Programming Course Online - Learn C with Data Structures Explore 678k+ interested Geeks DSA to Development: A Complete Guide Explore 79k+ interested Geeks React JS Course Online - React JS Certification Course Explore', 'JavaScript Tutorial Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 216 Likes Like Report JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials Like 216', 'JavaScript Tutorial Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 216 Likes Like Report JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials Like 216', 'JavaScript Tutorial Last Updated : 23 Jul, 2025 Comments Improve Suggest changes 216 Likes Like Report JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials', 'JavaScript is a programming language used to create dynamic content for websites. It is a lightweight, cross-platform, and single-threaded programming language. It\'s an interpreted language that executes code line by line, providing more flexibility . JavaScript on Client Side: On the client side, JavaScript works along with HTML and CSS. HTML adds structure to a web page, CSS styles it, and JavaScript brings it to life by allowing users to interact with elements on the page, such as actions on clicking buttons, filling out forms, and showing animations. JavaScript on the client side is directly executed in the user\'s browser. JavaScript on Server Side :  On the Server side (on Web Servers), JavaScript is used to access databases, file handling, and security features to send responses , to browsers. Previous Play Next 1 / 2 Why Learn JavaScript? JavaScript is core language for web development, enabling dynamic and interactive features in websites with fewer lines of code. It is highly in demand, offering many job opportunities in Frontend, Backend (Node.js), and Full Stack Development. JavaScript supports powerful frameworks and libraries like React, Angular, Vue.js, Node.js, and Express.js, widely used in modern web applications. JavaScript is an object-oriented and event-driven language, ideal for building scalable and responsive applications. It is cross-platform and runs directly in all modern web browsers without the need for installation. Major companies like Google, Facebook, and Amazon use JavaScript in their tech stacks. Write and Run Your First JavaScript Program Mostly browsers can run JavaScript directly, so there\'s no need to install a compiler. However, the built-in browser console isn’t very beginner-friendly. That’s why we’ve added an online editor below to help you get started easily. JavaScript console . log ( "Hello World!" ); console . log ( "Hello World!" ); Before we start, We recommend you to edit the code and try to print your own name. Fundamentals Let\'s Explore JavaScript\'s fundamentals which will help build you a understanding to start with JavaScript Introduction Quiz: JS Basics Using JS in HTML Variables and Datatypes Quiz: Variables & Data Types Operators Type Conversion and Coercion Control Flow Statements Quiz: Operators , Control Flow Scope Browser console Functions and Events Functions in JavaScript are reusable blocks of code that perform a specific task. Events are actions that happen in the browser, such as mouse clicks, keyboard input, or page loading. Functions Function binding Hoisting Closures Higher-Order Functions Iterator Function Generator Quiz: Functions Events Event Loop Event Bubbling Quiz: Event Handling JavaScript Beginner Projects Now you have a basic understanding of JavaScript. So start with some beginner level projects to clear your concept and to implement in real world applications. Counter Application Prime Number Checker Show and Hide Password Palindrome Checker App JavaScript Carousel Email Validator App Unicode Character Value Random Number Generator Random Password Generator JavaScript Data Structure JavaScript provides a versatile set of data structures that help in efficient data storage, manipulation, and problem-solving. In this section, we will explore each data structure and algorithm in detail. Numbers String Quiz: Numbers , String Array LinkedList Quiz: Arrays , Linked List Map Stack Queue Quiz: Stack , Queue Sorting Algorithms JavaScript\'s built-in utilities and ES6+ enhancements provide additional data structures, including the following WeakMap WeakSet Typed Arrays Deque Priority Queue (Heap) Quiz: Data Structure To learn data structure and algorithm with JavaScript in detail, you can refer to our DSA with JavaScript Tutorial. Object Oriented Programming Object-Oriented Programming (OOP) in JavaScript, a concept that enables the structure of code by modeling real-world entities as objects with properties and behaviors. Introduction to OOP Objects Quiz: Objects Classes Constructor Method this Keyword Prototype Static Methods Inheritance Quiz: Classes and Inheritance Encapsulation Abstraction Polymorphism Getters and Setters Quiz: OOP Browser and Document Object Model Browser Object Model Document Object Model Manipulate DOM Elements Event Handling in the DOM Quiz: BOM and DOM Asynchronous JavaScript Callbacks Promise Promise Chaining Async/Await Quiz: Asynchronous JavaScript JavaScript Intermediate Projects Now you have a good understanding of JavaScript. So let\'s implement all these in some real world applications. Price Range Slider with Min-Max Input GitHub Profile Search Toast Notification Multi-Step Progress Bar Quiz App with Timer Expense Tracker Sortable and Filterable Table Dynamic Resume Builder OTP Input Field Student Grade Calculator JavaScript JSON It is a lightweight data format for storing and exchanging data widely used to send data between a server and a client. JSON Tutorial JSON vs JavaScript Object Read JSON File Using JS Parse JSON Data in JS JavaScript JSON Parser JavaScript JSON Complete Reference Quiz: JSON Regular Expression and Validation Regular expressions plays important role for validation. Validations help ensure that data entered by users meets specific criteria. Regular expressions Form Validation Email Validation Number Validation Password Validation URL Validation UserName Validation Quiz: Regular Expressions Exception and Error Handling Exception and Error handling is crucial for ensuring the reliability and stability of JavaScript applications by handling errors effectively Exception Handling throw Statement try-catch Statement Debugging Quiz: Error Handling & Debugging Testing and Performance Optimization Unit testing with Jest Memory Management Garbage Collection Lazy Loading Debouncing Throttling Quiz: Testing & Optimization Interesting Facts This section covers all the interesting facts and features which made JavaScript so popular and will easy if you are switching from other programming languages also. Data Types Strings Functions \'this\' keyword Set Map Arrays Object Complete JavaScript JavaScript Advanced Projects Now you have covered almost all the important concepts of JavaScript. These projects will improve and revise your JavaScript Knowledge. Employee Database Management System Nested Chat Comments Responsive Admin Dashboard Task Scheduler Dragon’s World Game Tic-Tac-Toe Game QR Code Generator Resize and Compress Images QR Code Scanner or Reader For all lists of Projects follow the article- JavaScript Project Ideas with Source Code JavaScript Quiz This section offers a collection of practice Quiz designed to test and support understanding of various concepts in JavaScript. Quizzes Practice Quiz-1 Practice Quiz-2 Practice Quiz-3 JavaScript Practice The javaScript Coding Practice Problems page offers exercises for all skill levels, covering basic Numbers, String to advanced structures like Stack, Queue. These problems help build a strong foundation and boost confidence in solving real-world coding challenges. Coding Problems JavaScript Exercises JavaScript Exercises, Practice Questions and Solutions JavaScript String Exercise JavaScript Array Exercise JavaScript Coding Questions and Answers JavaScript Programming Examples Interview Questions This section provides a list of interview questions related to JavaScript. JavaScript Interview Questions and Answers (2025) For Begineers Intermediate JavaScript Interview Questions and Answers (2025) Advance JS Interview Questions and Answers (2025) For Experienced JavaScript this Operator Interview Questions JavaScript String Interview Questions JavaScript Array Interview Questions JavaScript Object Interview Questions Top 50 Array Coding Problems for Interviews JavaScript Output Based Interview Questions For a quick recap of JavaScript read the article - JavaScript Cheat Sheet Libraries and Frameworks JavaScript libraries and frameworks play a important role in modern web development. They offer built-in functions and methods that enhance web pages, making them more dynamic and interactive. They handle repetitive tasks, allowing developers to focus on core functionality. Also, they provide project structure and data flow structure that helps to create fast and more reliable applications. JavaScript Tutorial- Libraries and Frameworks Libraries Libraries provide pre-built solutions for common tasks. Developers can use these functions instead of writing code from scratch, saving valuable time. Here are a few popular libraries of JavaScript. Frontend Libraries : React , Preact , Lodash , Moment.js , jQuery , Axios Backend Libraries: Socket.io , JWT , Bcrypt , Passport.js , CORS Frameworks Frameworks, offer a comprehensive structure for building applications. Here are a few popular frameworks of JavaScript. Frontend Frameworks: Vue.js , Angular , Next.js , Nuxt.js , Gatsby , Remix Backend Frameworks: Express.js , NestJS , Koa.js , Sails.js, Fastify FullStack FrameWorks: Meteor.js , Next.js, Nuxt.js, RedwoodJS Features of JavaScript JavaScript is one of the most widely used programming languages, known for its flexibility and versatility in web development. Here are some key features or characteristics: Easy to Learn and Use : JavaScript\'s syntax is simple and straightforward, making it easy for both beginners and experienced developers to pick up. Interpreted Language : JavaScript is an interpreted language, means it is executed directly by the browser without the need for a compiler. Event-Driven and Asynchronous : JavaScript is designed to handle events, making it ideal for interactive web pages. It supports asynchronous programming, enabling non-blocking operations. Object-Oriented and Functional : JavaScript supports both object-oriented and functional programming. This gives developers the flexibility to structure their code according to their need. Dynamically Typed : In JavaScript, you don’t need to declare data types when declaring variables. The language automatically determines the data type at runtime, making it more flexible. Extensive Libraries and Frameworks : JavaScript has a rich ecosystem of libraries and frameworks such as React, Angular, and Vue.js, which simplify and speed up development for both front-end and back-end projects. Cross-Platform : JavaScript is supported across all modern browsers, allowing the same code to run seamlessly on different operating systems and platforms. Large Community Support : JavaScript benefits from a large, active developer community that contributes to its growth. With numerous resources available, finding help or solutions is always easy. Applications of JavaScript JavaScript is a versatile language that powers various applications, from web development to mobile apps, making it an essential tool for modern programming. Web Development : JavaScript is widely used in web development to create interactive and dynamic websites. Frameworks like React and Angular make front-end development faster, while Node.js is used for building server-side applications. Mobile App Development : JavaScript helps in developing mobile apps using frameworks like React Native, allowing developers to build cross-platform apps for both iOS and Android. Game Development : JavaScript is also used for creating browser-based games with libraries like Phaser, making it easy to develop 2D games that run directly in the browser. Server-Side Development : With Node.js, JavaScript is used for server-side programming, enabling developers to build scalable applications and APIs, especially for real-time features like chat systems. Scripting & Automation : JavaScript is ideal for automating web-related tasks like form validation and data manipulation, improving efficiency and reducing manual work. Web Scraping : JavaScript, along with libraries like Puppeteer , is used to extract information from websites for data analysis or research, making it useful for web scraping tasks. IoT (Internet of Things) : JavaScript is used to control devices and sensors in IoT projects, allowing developers to build smart systems with frameworks like Johnny-Five. Real-Time Applications : JavaScript powers real-time applications, such as live chats or notifications, using technologies like WebSockets and Socket.io for instant communication between users and servers. JavaScript vs. Other Programming Languages Below is a comparison of JavaScript with Python, C++, and Java: Feature JavaScript Python C++ Java Type Interpreted Interpreted Compiled Compiled and Interpreted Paradigm Multi-paradigm (event-driven, functional, object-oriented) Multi-paradigm (object-oriented, procedural, functional) Multi-paradigm (procedural, object-oriented, generic) Object-oriented, structured Memory Management Automatic (Garbage collection) Automatic (Garbage collection) Manual Automatic (Garbage collection) Syntax Simple Simple Complex Complex Use Cases Web development, mobile apps, real-time applications Web development, data analysis, machine learning System programming, game development, high-performance applications Large-scale applications, enterprise software Notable Frameworks/Libraries React, Angular, Node.js Django, Flask Standard Library, Boost Spring, Hibernate Community Support Strong Strong Strong Strong Job Market Abundant Abundant Abundant Abundant List of Companies Using JavaScript These are some popular companies that use JavaScript in their workflow Company Description Google Google uses JavaScript extensively in its web services, including Gmail and Google Maps. Facebook Facebook’s front-end is built with React, a JavaScript library, for a dynamic user interface. Netflix Netflix uses JavaScript for their interactive user interface and in their backend services. Airbnb Airbnb relies on JavaScript, using Node.js for scalable back-end development and React for the front end. LinkedIn LinkedIn uses JavaScript for both front-end and back-end development, enabling real-time interaction. Uber JavaScript is used by Uber for real-time tracking and routing, employing both front-end and back-end technologies. Twitter Twitter uses JavaScript for handling its dynamic feeds and providing a seamless user experience. PayPal PayPal’s front-end is powered by JavaScript, offering smooth, interactive user experiences. eBay eBay uses JavaScript to build their responsive, dynamic web applications and enhance user interactions. Slack Slack\'s web client and several of its real-time communication features are powered by JavaScript. Career & Jobs in JavaScript JavaScript opens up a variety of career opportunities, as it is essential for web development, app creation, and dynamic user interfaces. Here are some top career paths for JavaScript developers Career Average Salary (INR) Per Annum Average Salary (USD) Per Annum JavaScript Developer ₹500,000 – ₹1,200,000 $60,000 – $110,000 Front-End Developer ₹600,000 – ₹1,400,000 $65,000 – $120,000 Full Stack Developer ₹700,000 – ₹1,500,000 $75,000 – $130,000 Back-End Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Web Developer ₹500,000 – ₹1,200,000 $55,000 – $100,000 React Developer ₹600,000 – ₹1,300,000 $70,000 – $125,000 Node.js Developer ₹700,000 – ₹1,600,000 $75,000 – $135,000 UX/UI Designer ₹600,000 – ₹1,300,000 $65,000 – $120,000 Software Engineer ₹500,000 – ₹1,500,000 $65,000 – $120,000 If you are a person, who is more into study from Courses. JavaScript Course Provides you Complete Beginner to Advanced learning. Get detailed list of all JavaScript Topics- JavaScript Complete Guide – A to Z Introduction of JavaScript Visit Course Introduction of JavaScript First program - Hello Geeks JavaScript Variables Data Types in JavaScript JavaScript Arithmetic Operators JavaScript Type Conversion Comment More info Campus Training Program Next Article Introduction to JavaScript K kartik Follow 216 Improve Article Tags : JavaScript Web Technologies Tutorials Web-Tech Tutorials']})